{"title":"Introducing ufoJS | Tagebucheintrag | graphicore.de","languageSwitch":"<ul class=\"language-switch\"><li title=\"Zeige diese Seite auf Deutsch. Die Benutzerschnittstelle ist \u00fcbersetzt, aber nicht unbedingt alle Artikel.\" class=\"first de active\"  ><a hreflang=\"de\" rel=\"alternate\" href=\"\/de\/archive\/2012-01-17_ufoJS-is-not-a-bird\">Deutsch<\/a><\/li><li title=\"Display this page in English. The interface is translated, but not all articles necessarily are.\" class=\"en\"  ><a hreflang=\"en\" rel=\"alternate\" href=\"\/en\/archive\/2012-01-17_ufoJS-is-not-a-bird\">English<\/a><\/li><\/ul>","type":"content","html":"<div class=\"contentContainer diaryEntry\" xml:lang=\"en\" lang=\"en\"><h1>Introducing ufoJS<\/h1><p class=\"teaser\">Project to build a JavaScript library that works with the Unified Font Object Format by porting the API of FontTools and RoboFab. Under the MIT License.<\/p><div class=\"gridRow\">\n<div class=\"gridPos0 gridWidth10\">\n<p>Fork, clone or download: <a href=\"https:\/\/github.com\/graphicore\/ufoJS\">ufoJS on gitHub<\/a>.<\/p>\n<h2>The Project<\/h2>\n<p>I <del>was<\/del> <ins>am<\/ins> tired of platform bound font editors, myself using Linux almost exclusively. Thus, beeing a web-developer most of my time, I naturally liked the idea of doing a font editor in the browser. So, last year I started porting parts of the Python libraries <a href=\"http:\/\/sourceforge.net\/projects\/fonttools\/\">FontTools<\/a> and <a href=\"http:\/\/www.robofab.org\">RoboFab<\/a> to JavaScript in my spare time. With the first goal of rendering the path data of <a href=\"http:\/\/unifiedfontobject.org\">UFO \u2014 Unified Font Object<\/a> .glif files in a browser. Now, most of the ported code is based around the pen APIs and I can show you something.\n<\/p>\n\n<\/div>\n<\/div>\n\n<div class=\"gridRow\">\n<div class=\"gridPos0 gridWidth7\">\n<object\n  width=\"100%\"\n  height=\"1104px\"\n  data=\"\/ufoJS\/env\/glif-renderer.xhtml\"\n><\/object> \n\n<\/div>\n<div class=\"gridPos7 gridWidth3\">\n<h3>Look at it.<\/h3>\n<p>\nOn the left side you can see the example application included from the project folder using an <del>iframe<\/del> <ins>object<\/ins> to include it here. It discovers the available glyphs by reading the contents.plist file of an UFO font and renders the path data of the selected .glif file using SVG. The font you can see is the DemoFont.ufo taken from the RoboFab package.<\/p>\n<h2>Technical<\/h2>\n<p>The library can be used in Gecko and Webkit browsers and in NodeJS. The latter has some external dependencies. The Browser dependent parts are yet only in the sample application but use dojo as well.<\/p>\n<h3>Loading<\/h3>\n<p>For Module loading I am using an <a href=\"http:\/\/wiki.commonjs.org\/wiki\/Modules\/AsynchronousDefinition\">AMD (Asyncronous Module Definition) Loader<\/a>. This nicely helps to organize code, is standardized and loads the stuff fast. In the browser facing code I'm using <a href=\"http:\/\/bdframework.org\/bdLoad\/docs\/bdLoad-tutorial\/bdLoad-tutorial.html\">bdload<\/a>. For nodeJs <a href=\"https:\/\/github.com\/jrburke\/r.js\">r.js of the requireJS project<\/a> is utilized.<\/p>\n<h3>Testing<\/h3>\n<p>Check out the <a href=\"http:\/\/graphicore.de\/ufoJS\/env\/tests.html\">Test Page<\/a>. This is done using the <a href=\"http:\/\/dojotoolkit.org\/reference-guide\/util\/doh.html\">D.O.H: Dojo Objective Harness<\/a> and this is the only thing you can run with nodeJS as well.<\/p>\n<\/div>\n<\/div><div class=\"diaryEntryFooter\"><a class=\"permalink\" href=\"\/de\/archive\/2012-01-17_ufoJS-is-not-a-bird\">Permalink<\/a> Dienstag, 17. Januar 2012 15:02:59 Europe\/Berlin<div class=\"filters\">Filter: <ul><li><a rel=\"tag\" href=\"\/de\/diary\/news\">Neues<\/a><\/li><li><a rel=\"tag\" href=\"\/de\/diary\/code\">Web und Code<\/a><\/li><\/ul><\/div><\/div><\/div>"}