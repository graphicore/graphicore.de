<?php

/**
 * DcUser
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class DcUser extends BaseDcUser implements Formation_Login_Interfaces_User
{
    public function setPassword($password)
    {
        /**
         * create a salt for the user record
         * this is a side effect of setting a password, of course!
         *
         * used to set the salt only the first time a model was generated
         * if(strlen($this->salt < 255)){}
         * but to create a salt on every change of the password makes it propably less predictable
         *
         */
        $this->salt = GC_PasswordGenerator::getRandomBytes(255);

        /*create the hash of the password, to NOT store it as plaintext*/
        return $this->_set('password', $this->saltPassword($password, $this->salt));
    }

    //this must return the same as $this->saltPassword
    protected static function _SQLSaltPassword()
    {
        return "SHA1(CONCAT('".Zend_Registry::get('config')->staticSalt."', ?, salt))";
    }
    //this must return the same as _SQLSaltPassword in a query
    public function saltPassword($password, $salt)
    {
        return sha1(Zend_Registry::get('config')->staticSalt.$password.$salt);
    }
/********************************************
 * the actual implementation of Formation_Login_Interfaces_User
 ********************************************/
    /**
     * returns a Zend_Auth_Adapter, something implementing Zend_Auth_Adapter_Interface
     **/
    public static function getAuthAdapter()
    {
        return new GC_Auth_Adapter_Doctrine(
            'DcUser',
            'name',
            'password',
            self::_SQLSaltPassword()
        );
    }
    /**
     * returns a string with username or null
     **/
    public function getIdentity()
    {
        return $this->name;
    }
    /**
     * returns a string with groupname or null
     **/
    public function getUserRole()
    {
        return ($this->DcGroup->name) ? $this->DcGroup->name : False;
    }
/********************************************
 * end of the implementation of Formation_Login_Interfaces_User
 ********************************************/

}
